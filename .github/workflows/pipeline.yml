name: Pipeline

on:
  push:
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

jobs:
  tests:
    name: Unit tests (Py${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    # Allow debugging with tmate
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
      with:
        limit-access-to-actor: true
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions
    - name: Test with tox
      run: tox
    - name: Run coveralls-python
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_FLAG_NAME: python-${{ matrix.python-version }}
        COVERALLS_PARALLEL: true
      run: |
        pip install --upgrade pip
        pip install --upgrade setuptools
        pip install --upgrade coveralls==3.2.0
        coveralls --service=github

  coveralls-finish:
    name: Finish coveralls-python
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Finished
        run: |
          pip3 install --upgrade pip
          pip3 install --upgrade setuptools
          pip3 install --upgrade coveralls
          coveralls --finish --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  linter:
    name: Linter (${{ matrix.tox_env }})
    strategy:
      matrix:
        tox_env:
          - black
          - bandit
          - isort
          - mypy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox
    - name: Test '${{ matrix.tox_env }}' with tox
      run: tox -e ${{ matrix.tox_env }}
